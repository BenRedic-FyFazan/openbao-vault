#!/bin/bash
# {{ ansible_managed }}
#
# chkconfig:   2345 95 95
# description: OpenBao secret management tool
# processname: bao
# pidfile: /var/run/openbao/pidfile

{% if ansible_distribution == "Ubuntu" %}
. /lib/lsb/init-functions
{% else %}
. /etc/init.d/functions
{% endif %}

VAULT="{{ openbao_bin_path }}/bao"
CONFIG="{{ openbao_config_path }}"
PID_FILE={{ openbao_run_path }}/vault.pid

[ -e /etc/sysconfig/vault ] && . /etc/sysconfig/vault

export GOMAXPROCS=$(nproc)

mkrundir() {
        [ ! -d /var/run/vault ] && mkdir -p {{ openbao_run_path }}
        chown {{ openbao_user }} {{ openbao_run_path }}
}

KILLPROC_OPT="-p ${PID_FILE}"
mkpidfile() {
        mkrundir
        [ ! -f $PID_FILE ] && pidofproc $VAULT > $PID_FILE
        chown {{ openbao_user }} {{ openbao_run_path }}
        if [ $? -ne 0 ] ; then
            rm $PID_FILE
            KILLPROC_OPT=""
        fi
}

start() {
        echo -n "Starting openbao vault: "
        {% if vault_http_proxy -%}
        export HTTP_PROXY={{ vault_http_proxy }}
        {% endif -%}
        {% if vault_https_proxy -%}
        export HTTPS_PROXY={{ vault_https_proxy }}
        {% endif -%}
        {% if vault_no_proxy -%}
        export NO_PROXY={{ vault_no_proxy }}
        {% endif -%}
        mkrundir
        [ -f $PID_FILE ] && rm $PID_FILE
        daemon --user={{ openbao_user }} \
            --pidfile="$PID_FILE" \
            "$VAULT" server -config={{ openbao_config_path if vault_use_config_path else vault_main_config }} {% if vault_log_level is defined %}-log-level={{ vault_log_level | lower }}{% endif %} {{ vault_exec_output }} &
        retcode=$?
        touch /var/lock/subsys/vault
        return $retcode
}

stop() {
        echo -n "Shutting down openbao vault: "
        if ("${VAULT}" info 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
            "$VAULT" leave
        fi

        mkpidfile
        killproc $KILLPROC_OPT $VAULT -9

        retcode=$?
        rm -f /var/lock/subsys/vault $PID_FILE
        return $retcode
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        "$VAULT" info
        ;;
    restart)
        stop
        start
        ;;
    reload)
        mkpidfile
        killproc $KILLPROC_OPT $VAULT -HUP
        ;;
    condrestart)
        [ -f /var/lock/subsys/vault ] && restart || :
        ;;
    *)
        echo "Usage: vault {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
exit $?
