---
# File: defaults/main.yml - default variables for OpenBao

# ---------------------------------------------------------------------------
# IMPORTANT:
# As OpenBao is a fork of Hashicorp vault, some paths and variables still
# use the 'vault' name and path convention.
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Core variables
# ---------------------------------------------------------------------------

# Package variables
openbao_version: "{{ lookup('env', 'VAULT_VERSION') | default('2.0.0', true) }}"
openbao_architecture_map:
  x86_64: x86_64
  amd64: x86_64
openbao_architecture: "{{ openbao_architecture_map[ansible_architecture] }}"
openbao_os: "{{ ansible_system | lower }}"
openbao_pkg: "openbao_{{ openbao_version }}_{{ openbao_os }}_{{ openbao_architecture }}.tar.gz"
openbao_archive_url: "https://github.com/openbao/openbao/releases/download/v{{ openbao_version }}/bao_{{ openbao_version }}_Linux_{{ openbao_architecture }}.tar.gz"

# Installation
openbao_start_pause_seconds: 10

# Install method variables
openbao_privileged_install: false

# Paths
openbao_bin_path: "/usr/local/bin"
openbao_config_path: /etc/vault.d
openbao_data_path: "/var/vault"
openbao_log_path: /var/log/vault
openbao_run_path: /var/run/openbao
openbao_home: "/home/{{ openbao_user }}"
openbao_harden_file_perms: true

# System user and group
openbao_manage_user: "true"
openbao_user: openbao
openbao_manage_group: false
openbao_group: "bin"
openbao_groups: null

openbao_dotfile: ".bashrc"
openbao_dotfile_disable: "false"

# Logging
vault_enable_log: false
vault_enable_logrotate: false
vault_logrotate_freq: 7
vault_logrotate_template: vault_logrotate.j2
vault_exec_output: ''

# Handlers
vault_service_restart: true
vault_service_reload: false

# ---------------------------------------------------------------------------
# Vault variables
# ---------------------------------------------------------------------------

vault_cluster_name: dc1
vault_datacenter: dc1
vault_log_level: "{{ lookup('env', 'VAULT_LOG_LEVEL') | default('info', true) }}"
vault_iface: "{{ lookup('env', 'VAULT_IFACE') | default(ansible_default_ipv4.interface, true) }}"
vault_address: "{{ hostvars[inventory_hostname]['ansible_' + vault_iface]['ipv4']['address'] }}"
vault_ui: "{{ lookup('env', 'VAULT_UI') | default(true, true) }}"
vault_port: 8200

vault_use_config_path: "false"

vault_main_config: "{{ openbao_config_path }}/vault_main.hcl"
vault_main_configuration_template: vault_main_configuration.hcl.j2
vault_listener_localhost_enable: false
vault_http_proxy: ""
vault_https_proxy: ""
vault_no_proxy: ""

# ---------------------------------------------------------------------------
# TCP listeners
# ---------------------------------------------------------------------------

vault_tcp_listeners:
  - vault_address: '{{ vault_address }}'
    vault_port: '{{ vault_port }}'
    vault_cluster_address: '{{ vault_cluster_address }}'
    # vault_proxy_protocol_behavior: '{{ vault_proxy_protocol_behavior }}'
    # vault_proxy_protocol_authorized_addrs: '{{ vault_proxy_protocol_authorized_addrs }}'
    vault_tls_disable: '{{ vault_tls_disable }}'
    vault_tls_certs_path: '{{ vault_tls_certs_path }}'
    vault_tls_private_path: '{{ vault_tls_private_path }}'
    vault_tls_cert_file: '{{ vault_tls_cert_file }}'
    vault_tls_key_file: '{{ vault_tls_key_file }}'
    vault_tls_ca_file: '{{ vault_tls_ca_file }}'
    vault_tls_min_version: '{{ vault_tls_min_version }}'
    vault_tls_cipher_suites: '{{ vault_tls_cipher_suites }}'
    vault_tls_require_and_verify_client_cert: '{{ vault_tls_require_and_verify_client_cert }}'
    vault_tls_disable_client_certs: '{{ vault_tls_disable_client_certs }}'
    # vault_x_forwarded_for_authorized_addrs: '{{ vault_x_forwarded_for_authorized_addrs }}'
    # vault_x_forwarded_for_hop_skips: '{{ vault_x_forwarded_for_hop_skips }}'
    # vault_x_forwarded_for_reject_not_authorized: '{{ vault_x_forwarded_for_reject_not_authorized }}'
    # vault_x_forwarded_for_reject_not_present: '{{ vault_x_forwarded_for_reject_not_present }}'

# ---------------------------------------------------------------------------
# Storage backend
# ---------------------------------------------------------------------------

vault_backend_file: vault_backend_file.j2
vault_backend_raft: vault_backend_raft.j2

vault_cluster_disable: false
vault_cluster_address: "{{ hostvars[inventory_hostname]['ansible_' + vault_iface]['ipv4']['address'] }}:{{ (vault_port | int) + 1 }}"
vault_cluster_addr: "{{ vault_protocol }}://{{ vault_cluster_address }}"
vault_api_addr: "{{ vault_protocol }}://{{ vault_redirect_address | default(hostvars[inventory_hostname]['ansible_' + vault_iface]['ipv4']['address']) }}:{{ vault_port }}"
vault_disable_api_health_check: false

vault_max_lease_ttl: "768h"
vault_default_lease_ttl: "768h"

# Storage tls settings
vault_backend_tls_src_files: "{{ vault_tls_src_files }}"
vault_backend_tls_certs_path: "{{ vault_tls_certs_path }}"
vault_backend_tls_private_path: "{{ vault_tls_private_path }}"
vault_backend_tls_cert_file: "{{ vault_tls_cert_file }}"
vault_backend_tls_key_file: "{{ vault_tls_key_file }}"
vault_backend_tls_ca_file: "{{ vault_tls_ca_file }}"

# raft storage settings
vault_backend: raft
vault_raft_group_name: "vault_raft_servers"
vault_raft_cluster_members: |
  [
  {% for server in groups[vault_raft_group_name] %}
    {
      "peer": "{{ server }}",
      "api_addr": "{{ hostvars[server]['vault_api_addr'] |
      default(vault_protocol + '://' + hostvars[server]['ansible_' + hostvars[server]['ansible_default_ipv4']['interface']]['ipv4']['address'] + ':' + (vault_port|string)) }}"
    },
  {% endfor %}
  ]

vault_raft_data_path: "{{ lookup('env', 'VAULT_RAFT_DATA_PATH') | default(openbao_data_path, true) }}"
vault_raft_node_id: "{{ lookup('env', 'VAULT_RAFT_NODE_ID') | default(inventory_hostname_short, true) }}"
# vault_raft_leader_tls_servername
# vault_raft_performance_multiplier:
# vault_raft_trailing_logs:
# vault_raft_snapshot_threshold:
# vault_raft_max_entry_size:
# vault_raft_autopilot_reconcile_interval:
# vault_raft_cloud_auto_join:
# vault_raft_cloud_auto_join_scheme:
# vault_raft_cloud_auto_join_port:
vault_raft_cloud_auto_join_exclusive: false

# ---------------------------------------------------------------------------
# Initialization and startup script templates
# ---------------------------------------------------------------------------

vault_systemd_template: vault_service_systemd.j2
vault_systemd_service_name: vault
vault_systemd_unit_path: /lib/systemd/system

# ---------------------------------------------------------------------------
# TLS variables
# ---------------------------------------------------------------------------

# NB: at the end of the role there's a API Reachability check; if you rely on
# self-signed certificates you might need to change the following to false
validate_certs_during_api_reachable_check: true

vault_tls_certs_path: "{{ lookup('env', 'VAULT_TLS_DIR') | default('/etc/vault/tls', true) }}" 
vault_tls_private_path: "{{ lookup('env', 'VAULT_TLS_DIR') | default('/etc/vault/tls', true) }}"
vault_tls_src_files: "{{ lookup('env', 'VAULT_TLS_SRC_FILES') | default(role_path ~ '/files', true) }}"

vault_tls_disable: "{{ lookup('env', 'VAULT_TLS_DISABLE') | default(1, true) }}"
vault_tls_gossip: "{{ lookup('env', 'VAULT_TLS_GOSSIP') | default(0, true) }}"

vault_tls_copy_keys: "true"
vault_protocol: "{% if vault_tls_disable %}http{% else %}https{% endif %}"
vault_tls_cert_file: "{{ lookup('env', 'VAULT_TLS_CERT_FILE') | default('server.crt', true) }}"
vault_tls_key_file: "{{ lookup('env', 'VAULT_TLS_KEY_FILE') | default('server.key', true) }}"
vault_tls_ca_file: "{{ lookup('env', 'VAULT_TLS_CA_CRT') | default('ca.crt', true) }}"
vault_tls_client_ca_file: ""

vault_tls_min_version: "{{ lookup('env', 'VAULT_TLS_MIN_VERSION') | default('tls12', true) }}"
vault_tls_cipher_suites: ""
vault_tls_files_remote_src: false
vault_tls_require_and_verify_client_cert: false
vault_tls_disable_client_certs: false

vault_telemetry_enabled: false
vault_unauthenticated_metrics_access: false